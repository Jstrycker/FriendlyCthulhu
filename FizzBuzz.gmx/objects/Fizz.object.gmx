<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>botstandinsprite</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>dir=0;
reprise=0;
lineNum=0;
retries=0;
frameNum=0;
stackFrame[0,0]=0;
program[0,0]=0;
breakPoint=true;
defending=false;
step=8;
for(i=0;i&lt;4;i++){
for(i2=0;i2&lt;4;i2++){
stackFrame[i,i2]=0;
}
}
//stackFrame[0,0]=1;
//stackFrame[0,2]=5;
 alarm_set(0,1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (reprise&lt;program.size) {
motion_set(dir*90,0);
defending=false;

alarm_set(1, step);
lineNum=reprize;
event_user(0);
reprize+=1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(breakPoint=false){

if (lineNum&lt;4) {
show_debug_message(stackFrame[lineNum,0]);
motion_set(dir*90,0);
defending=false;


event_user(0);
lineNum=lineNum+1;
}

else{
motion_set(dir*90,0);

for (xi=0;xi&lt;4;xi++){
    for (yi=0;yi&lt;3;yi++){
        program[xi+(4*frameNum),yi]=0;
    }
}
for(i=0;i&lt;3;i++){
program[frameNum*4,i]=stackFrame[0,i];
program[frameNum*4+1,i]=stackFrame[1,i];
program[frameNum*4+2,i]=stackFrame[2,i];
program[frameNum*4+3,i]=stackFrame[3,i];
}
frameNum=frameNum+1;
lineNum=0;
for (xi=0;xi&lt;4;xi++){
    for (yi=0;yi&lt;3;yi++){
        stackFrame[xi,yi]=0;
    }
}
script_execute(open_overlay);
script_execute(Pause);

}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="column_par">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>motion_set(dir*90,0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="Wall_par">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>motion_set(dir*90,0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if breakPoint==true{
breakPoint=false;
alarm_set(0, 1);}
else{
breakPoint=true;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>switch (stackFrame[lineNum,0]){
case 1:
    //move
    spaces=stackFrame[lineNum,2];
    dir=stackFrame[lineNum,1];
    motion_set(dir*90, 8);
    alarm_set(0, step*spaces);
break;

case 2:
    //Main Guns
    dir=stackFrame[lineNum,1];
    xPrime=x;
    yPrime=y;
    if dir==0 {
        xPrime=x+64;}
    if  dir==1{
        yPrime=y-64;}
    if dir==2 {
        xPrime=x-64;}
    if  dir==3{
        yPrime=y+64;}     
        alarm_set(0, step); 
    pow=instance_create(xPrime,yPrime,Fizz_Bullet)
    with (pow){
    speed=10;
    direction=other.dir*90
    }    

break;
case 3:
    //Defend  
    dir=stackFrame[lineNum,1];
    dirP=(dir+2)%4
    defending=true;
    alarm_set(0, step*3);

break;

case 4:
//dash
  spaces=2;
    dir=stackFrame[lineNum,1];
    motion_set(dir*90, 16);
    alarm_set(0, step*spaces);

break;
case 5:
//teleport
  spaces=stackFrame[lineNum,2];
    dir=stackFrame[lineNum,1];
    if (place_empty(lengthdir_x(spaces*64, dir*90)+x, lengthdir_y(spaces*64, dir*90)+y)){
    x=lengthdir_x(spaces*64, dir*90)+x;
    y=lengthdir_y(spaces*64, dir*90)+y;
    }
    alarm_set(0, step);

break;
case 6:
//LAZER BEAMS
 dir=stackFrame[lineNum,1];
    xPrime=x;
    yPrime=y;
    if dir==0 {
        xPrime=x+64;}
    if  dir==1{
        yPrime=y-64;}
    if dir==2 {
        xPrime=x-64;}
    if  dir==3{
        yPrime=y+64;}     
        alarm_set(0, step*3); 
    pow=instance_create(xPrime,yPrime,Lazer)
    with (pow){
    dir=other.dir;
    event_user(0);
    }    


break;
case 7:
//multi direction icer
 pow=instance_create(x+64,y,IceBlasr)
    with (pow){
    speed=10;
    direction=0;
    } 
    pow=instance_create(x+64,y-64,IceBlasr)
    with (pow){
    speed=10;
    direction=45;
    } 
    pow=instance_create(x,y-64,IceBlasr)
    with (pow){
    speed=10;
    direction=90;
    } 
    pow=instance_create(x-64,y-64,IceBlasr)
    with (pow){
    speed=10;
    direction=135
    } 
    pow=instance_create(x-64,y,IceBlasr)
    with (pow){
    speed=10;
    direction=180
    } 
    pow=instance_create(x-64,y+64,IceBlasr)
    with (pow){
    speed=10;
    direction=225
    }   
    pow=instance_create(x,y+64,IceBlasr)
    with (pow){
    speed=10;
    direction=270
    } 
    pow=instance_create(x+64,y+64,IceBlasr)
    with (pow){
    speed=10;
    direction=315
    } 

break;

default:
alarm_set(0, step*4);
break;


}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
